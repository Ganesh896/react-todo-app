{"version":3,"sources":["components/Todo.module.css","components/TodoForm.module.css","components/TodoList.module.css","components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["module","exports","TodoForm","props","useState","editTodo","value","inputText","setInputText","className","classes","form","onSubmit","event","preventDefault","trim","length","id","Math","floor","random","text","type","name","placeholder","onChange","target","Todo","setEditTodo","onUpdateTodo","todoLists","map","todo","index","onClick","onRemoveTodo","TodoList","todoList","setTodoList","prevTodos","todo_container","onCompleteTodo","updatedTodo","isComplete","newTodoList","filter","todoId","newTodo","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,qB,iBCAnDD,EAAOC,QAAU,CAAC,KAAO,yB,gBCAzBD,EAAOC,QAAU,CAAC,eAAiB,mC,gKCwCpBC,MAtCf,SAAkBC,GAChB,MAAkCC,mBAChCD,EAAME,SAAWF,EAAME,SAASC,MAAQ,IAD1C,mBAAOC,EAAP,KAAkBC,EAAlB,KAuBA,OACE,uBAAMC,UAAWC,IAAQC,KAAMC,SAhBP,SAACC,GACzBA,EAAMC,iBAE0B,IAA5BP,EAAUQ,OAAOC,SAIrBb,EAAMS,SAAS,CACbK,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMd,IAGRC,EAAa,MAIb,UACE,uBACEc,KAAK,OACLC,KAAK,OACLC,YAAY,eACZlB,MAAOC,EACPkB,SA1BmB,SAACZ,GACxBL,EAAaK,EAAMa,OAAOpB,UA2BxB,wBAAQgB,KAAK,SAAb,0B,gBCESK,MAlCf,SAAcxB,GACZ,MAAgCC,mBAAS,CAAEa,GAAI,KAAMX,MAAO,KAA5D,mBAAOD,EAAP,KAAiBuB,EAAjB,KAUA,OAAIvB,EAASY,GACJ,cAAC,EAAD,CAAUZ,SAAUA,EAAUO,SATlB,SAACN,GACpBH,EAAM0B,aAAaxB,EAASY,GAAIX,GAChCsB,EAAY,CACVX,GAAI,KACJX,MAAO,QAQJH,EAAM2B,UAAUC,KAAI,SAACC,EAAMC,GAAP,OACzB,sBAAiBxB,UAAWC,IAAQsB,KAApC,UACE,qBAAKvB,UAAWC,IAAQW,KAAxB,SACGW,EAAKX,MAD2BW,EAAKf,IAGxC,gCACE,mBACER,UAAU,mBACVyB,QAAS,kBAAM/B,EAAMgC,aAAaH,EAAKf,OAEzC,mBACER,UAAU,kBACVyB,QAAS,kBAAMN,EAAY,CAAEX,GAAIe,EAAKf,GAAIX,MAAO0B,EAAKX,eAXlDY,O,gBCsCCG,MApDf,WACE,MAAgChC,mBAAS,IAAzC,mBAAOiC,EAAP,KAAiBC,EAAjB,KAoCA,OACE,gCACE,cAAC,EAAD,CAAU1B,SApCU,SAACoB,GAClBA,GAILM,GAAY,SAACC,GACX,MAAM,CAAEP,GAAR,mBAAiBO,UA+BjB,qBAAK9B,UAAWC,IAAQ8B,eAAxB,SACE,cAAC,EAAD,CACEV,UAAWO,EACXI,eAhBoB,SAACxB,GAC3B,IAAIyB,EAAcL,EAASN,KAAI,SAACC,GAI9B,OAHIA,EAAKf,KAAOA,IACde,EAAKW,YAAcX,EAAKW,YAEnBX,KAETM,EAAYI,IAUNP,aAtBkB,SAAClB,GACzB,IAAM2B,EAAcP,EAASQ,QAAO,SAACb,GAAD,OAAUA,EAAKf,KAAOA,KAC1DqB,EAAYM,IAqBNf,aAhCkB,SAACiB,EAAQC,GAC5BA,GAGLT,GAAY,SAACU,GAAD,OACVA,EAAKjB,KAAI,SAACkB,GAAD,OAAWA,EAAKhC,IAAM6B,EAASC,EAAUE,iBCbzCC,MARf,WACE,OACE,qBAAKzC,UAAU,MAAf,SACE,cAAC,EAAD,O,MCDN0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fe359b35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"Todo_todo__3V_D8\",\"text\":\"Todo_text__2lrhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TodoForm_form__3ZhGl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo_container\":\"TodoList_todo_container__1GagE\"};","import React, { useState } from \"react\";\r\nimport classes from \"./TodoForm.module.css\";\r\n\r\nfunction TodoForm(props) {\r\n  const [inputText, setInputText] = useState(\r\n    props.editTodo ? props.editTodo.value : \"\"\r\n  );\r\n\r\n  const inputTextHandler = (event) => {\r\n    setInputText(event.target.value);\r\n  };\r\n\r\n  const submitFormHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (inputText.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: inputText,\r\n    });\r\n\r\n    setInputText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={submitFormHandler}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"text\"\r\n        placeholder=\"Type here...\"\r\n        value={inputText}\r\n        onChange={inputTextHandler}\r\n      />\r\n      <button type=\"submit\">Add todo</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport classes from \"./Todo.module.css\";\r\n\r\nfunction Todo(props) {\r\n  const [editTodo, setEditTodo] = useState({ id: null, value: \"\" });\r\n\r\n  const submitUpdate = (value) => {\r\n    props.onUpdateTodo(editTodo.id, value);\r\n    setEditTodo({\r\n      id: null,\r\n      value: \"\",\r\n    });\r\n  };\r\n\r\n  if (editTodo.id) {\r\n    return <TodoForm editTodo={editTodo} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return props.todoLists.map((todo, index) => (\r\n    <div key={index} className={classes.todo}>\r\n      <div className={classes.text} key={todo.id}>\r\n        {todo.text}\r\n      </div>\r\n      <div>\r\n        <i\r\n          className=\"bx bxs-trash-alt\"\r\n          onClick={() => props.onRemoveTodo(todo.id)}\r\n        ></i>\r\n        <i\r\n          className=\"bx bxs-edit-alt\"\r\n          onClick={() => setEditTodo({ id: todo.id, value: todo.text })}\r\n        ></i>\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nimport classes from \"./TodoList.module.css\";\r\n\r\nfunction TodoList() {\r\n  const [todoList, setTodoList] = useState([]);\r\n\r\n  const todoListHandler = (todo) => {\r\n    if (!todo) {\r\n      return;\r\n    }\r\n\r\n    setTodoList((prevTodos) => {\r\n      return [todo, ...prevTodos];\r\n    });\r\n  };\r\n\r\n  const updateTodoHandler = (todoId, newTodo) => {\r\n    if (!newTodo) {\r\n      return;\r\n    }\r\n    setTodoList((prev) =>\r\n      prev.map((item) => (item.id == todoId ? newTodo : item))\r\n    );\r\n  };\r\n\r\n  const removeTodoHandler = (id) => {\r\n    const newTodoList = todoList.filter((todo) => todo.id !== id);\r\n    setTodoList(newTodoList);\r\n  };\r\n\r\n  const completeTodoHandler = (id) => {\r\n    let updatedTodo = todoList.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodoList(updatedTodo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TodoForm onSubmit={todoListHandler} />\r\n      <div className={classes.todo_container}>\r\n        <Todo\r\n          todoLists={todoList}\r\n          onCompleteTodo={completeTodoHandler}\r\n          onRemoveTodo={removeTodoHandler}\r\n          onUpdateTodo={updateTodoHandler}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import \"./App.css\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}